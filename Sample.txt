// {
//     "dev": {
//         "additional_text_mimetypes": [], // allows you to provide additional mimetypes to be handled as text when binary_support is true.
//         "alb_enabled": false, // enable provisioning of application load balancing resources. If set to true, you must fill out the alb_vpc_config option as well.
//         "alb_vpc_config": {
//             "CertificateArn": "your_acm_certificate_arn", // ACM certificate ARN for ALB
//             "SubnetIds": [], // list of subnets for ALB
//             "SecurityGroupIds": [] // list of security groups for ALB
//         },
//         "api_key_required": false, // enable securing API Gateway endpoints with x-api-key header (default False)
//         "api_key": "your_api_key_id", // optional, use an existing API key. The option "api_key_required" must be true to apply
//         "apigateway_enabled": true, // Set to false if you don't want to create an API Gateway resource. Default true.
//         "apigateway_description": "My funky application!", // Define a custom description for the API Gateway console. Default None.
//         "assume_policy": "my_assume_policy.json", // optional, IAM assume policy JSON file
//         "attach_policy": "my_attach_policy.json", // optional, IAM attach policy JSON file
//         "apigateway_policy": "my_apigateway_policy.json", // optional, API Gateway resource policy JSON file
//         "async_source": "sns", // Source of async tasks. Defaults to "lambda"
//         "async_resources": true, // Create the SNS topic and DynamoDB table to use. Defaults to true.
//         "async_response_table": "your_dynamodb_table_name",  // the DynamoDB table name to use for captured async responses; defaults to None (can't capture)
//         "async_response_table_read_capacity": 1,  // DynamoDB table read capacity; defaults to 1
//         "async_response_table_write_capacity": 1,  // DynamoDB table write capacity; defaults to 1
//         "aws_endpoint_urls": { "aws_service_name": "endpoint_url" }, // a dictionary of endpoint_urls that emulate the appropriate service.  Usually used for testing, for instance with localstack.
//         "aws_environment_variables" : {"your_key": "your_value"}, // A dictionary of environment variables that will be available to your deployed app via AWS Lambdas native environment variables. See also "environment_variables" and "remote_env" . Default {}.
//         "aws_kms_key_arn": "your_aws_kms_key_arn", // Your AWS KMS Key ARN
//         "aws_region": "aws-region-name", // optional, uses region set in profile or environment variables if not set here,
//         "binary_support": true, // Enable automatic MIME-type based response encoding through API Gateway. Default true.
//         "callbacks": { // Call custom functions during the local Zappa deployment/update process
//             "settings": "my_app.settings_callback", // After loading the settings
//             "zip": "my_app.zip_callback", // After creating the package
//             "post": "my_app.post_callback", // After command has executed
//         },
//         "cache_cluster_enabled": false, // Use APIGW cache cluster (default False)
//         "cache_cluster_size": 0.5, // APIGW Cache Cluster size (default 0.5)
//         "cache_cluster_ttl": 300, // APIGW Cache Cluster time-to-live (default 300)
//         "cache_cluster_encrypted": false, // Whether or not APIGW Cache Cluster encrypts data (default False)
//         "certificate": "my_cert.crt", // SSL certificate file location. Used to manually certify a custom domain
//         "certificate_key": "my_key.key", // SSL key file location. Used to manually certify a custom domain
//         "certificate_chain": "my_cert_chain.pem", // SSL certificate chain file location. Used to manually certify a custom domain
//         "certificate_arn": "arn:aws:acm:us-east-1:1234512345:certificate/aaaa-bbb-cccc-dddd", // ACM certificate ARN (needs to be in us-east-1 region).
//         "cloudwatch_log_level": "OFF", // Enables/configures a level of logging for the given staging. Available options: "OFF", "INFO", "ERROR", default "OFF".
//         "cloudwatch_data_trace": false, // Logs all data about received events. Default false.
//         "cloudwatch_metrics_enabled": false, // Additional metrics for the API Gateway. Default false.
//         "cognito": { // for Cognito event triggers
//             "user_pool": "user-pool-id", // User pool ID from AWS Cognito
//             "triggers": [{
//                 "source": "PreSignUp_SignUp", // triggerSource from http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html#cognito-user-pools-lambda-trigger-syntax-pre-signup
//                 "function": "my_app.pre_signup_function"
//             }]
//         },
//         "context_header_mappings": { "HTTP_header_name": "API_Gateway_context_variable" }, // A dictionary mapping HTTP header names to API Gateway context variables
//         "cors": false, // Enable Cross-Origin Resource Sharing. Default false. If true, simulates the "Enable CORS" button on the API Gateway console. Can also be a dictionary specifying lists of "allowed_headers", "allowed_methods", and string of "allowed_origin"
//         "dead_letter_arn": "arn:aws:<sns/sqs>:::my-topic/queue", // Optional Dead Letter configuration for when Lambda async invoke fails thrice
//         "debug": true, // Print Zappa configuration errors tracebacks in the 500. Default true.
//         "delete_local_zip": true, // Delete the local zip archive after code updates. Default true.
//         "delete_s3_zip": true, // Delete the s3 zip archive. Default true.
//         "django_settings": "your_project.production_settings", // The modular path to your Django project's settings. For Django projects only.
//         "domain": "yourapp.yourdomain.com", // Required if you're using a domain
//         "base_path": "your-base-path", // Optional base path for API gateway custom domain base path mapping. Default None. Not supported for use with Application Load Balancer event sources.
//         "environment_variables": {"your_key": "your_value"}, // A dictionary of environment variables that will be available to your deployed app. See also "remote_env" and "aws_environment_variables". Default {}.
//         "events": [
//             {   // Recurring events
//                 "function": "your_module.your_recurring_function", // The function to execute
//                 "expression": "rate(1 minute)" // When to execute it (in cron or rate format)
//             },
//             {   // AWS Reactive events
//                 "function": "your_module.your_reactive_function", // The function to execute
//                 "event_source": {
//                     "arn":  "arn:aws:s3:::my-bucket", // The ARN of this event source
//                     "events": [
//                         "s3:ObjectCreated:*" // The specific event to execute in response to.
//                     ]
//                 }
//             }
//         ],
//         "endpoint_configuration": ["EDGE", "REGIONAL", "PRIVATE"],  // Specify APIGateway endpoint None (default) or list EDGE, REGION, PRIVATE
//         "exception_handler": "your_module.report_exception", // function that will be invoked in case Zappa sees an unhandled exception raised from your code
//         "exclude": ["file.gz", "tests"], // A list of filename patterns to exclude from the archive (see fnmatch module for patterns).
//         "exclude_glob": [".gz", ".rar", "tests/*/"], // A list of glob patterns to exclude from the archive. To exclude boto3 and botocore (available in an older version on Lambda), add "boto3*" and "botocore*".
//         "extends": "stage_name", // Duplicate and extend another stage's settings. For example, dev-asia could extend from dev-common with a different s3_bucket value.
//         "extra_permissions": [{ // Attach any extra permissions to this policy. Default None
//             "Effect": "Allow",
//             "Action": ["rekognition:*"], // AWS Service ARN
//             "Resource": "*"
//         }],
//         "iam_authorization": false, // optional, use IAM to require request signing. Default false. Note that enabling this will override the authorizer configuration.
//         "include": ["your_special_library_to_load_at_handler_init"], // load special libraries into PYTHONPATH at handler init that certain modules cannot find on path
//         "authorizer": {
//             "function": "your_module.your_auth_function", // Local function to run for token validation. For more information about the function see below.
//             "arn": "arn:aws:lambda:<region>:<account_id>:function:<function_name>", // Existing Lambda function to run for token validation.
//             "result_ttl": 300, // Optional. Default 300. The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches authorizer results. Currently, the maximum TTL value is 3600 seconds.
//             "token_header": "Authorization", // Optional. Default 'Authorization'. The name of a custom authorization header containing the token that clients submit as part of their requests.
//             "validation_expression": "^Bearer \\w+$", // Optional. A validation expression for the incoming token, specify a regular expression.
//         },
//         "keep_warm": true, // Create CloudWatch events to keep the server warm. Default true. To remove, set to false and then unschedule.
//         "keep_warm_expression": "rate(4 minutes)", // How often to execute the keep-warm, in cron and rate format. Default 4 minutes.
//         "lambda_description": "Your Description", // However you want to describe your project for the AWS console. Default "Zappa Deployment".
//         "lambda_handler": "your_custom_handler", // The name of Lambda handler. Default: handler.lambda_handler
//         "layers": ["arn:aws:lambda:<region>:<account_id>:layer:<layer_name>:<layer_version>"], // optional lambda layers
//         "lambda_concurrency": 10, // Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level. Default is None.
//         "lets_encrypt_key": "s3://your-bucket/account.key", // Let's Encrypt account key path. Can either be an S3 path or a local file path.
//         "log_level": "DEBUG", // Set the Zappa log level. Can be one of CRITICAL, ERROR, WARNING, INFO and DEBUG. Default: DEBUG
//         "manage_roles": true, // Have Zappa automatically create and define IAM execution roles and policies. Default true. If false, you must define your own IAM Role and role_name setting.
//         "memory_size": 512, // Lambda function memory in MB. Default 512.
//         "ephemeral_storage": { "Size": 512 }, // Lambda function ephemeral_storage size in MB, Default 512, Max 10240
//         "num_retained_versions":null, // Indicates the number of old versions to retain for the lambda. If absent, keeps all the versions of the function.
//         "payload_compression": true, // Whether or not to enable API gateway payload compression (default: true)
//         "payload_minimum_compression_size": 0, // The threshold size (in bytes) below which payload compression will not be applied (default: 0)
//         "prebuild_script": "your_module.your_function", // Function to execute before uploading code
//         "profile_name": "your-profile-name", // AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.
//         "project_name": "MyProject", // The name of the project as it appears on AWS. Defaults to a slugified pwd.
//         "remote_env": "s3://my-project-config-files/filename.json", // optional file in s3 bucket containing a flat json object which will be used to set custom environment variables.
//         "role_name": "MyLambdaRole", // Name of Zappa execution role. Default <project_name>-<env>-ZappaExecutionRole. To use a different, pre-existing policy, you must also set manage_roles to false.
//         "role_arn": "arn:aws:iam::12345:role/app-ZappaLambdaExecutionRole", // ARN of Zappa execution role. Default to None. To use a different, pre-existing policy, you must also set manage_roles to false. This overrides role_name. Use with temporary credentials via GetFederationToken.
//         "route53_enabled": true, // Have Zappa update your Route53 Hosted Zones when certifying with a custom domain. Default true.
//         "runtime": "python3.11", // Python runtime to use on Lambda. Can be one of "python3.7", "python3.8", "python3.9", or "python3.10", or "python3.11". Defaults to whatever the current Python being used is.
//         "s3_bucket": "dev-bucket", // Zappa zip bucket,
//         "slim_handler": false, // Useful if project >50M. Set true to just upload a small handler to Lambda and load actual project from S3 at runtime. Default false.
//         "settings_file": "~/Projects/MyApp/settings/dev_settings.py", // Server side settings file location,
//         "tags": { // Attach additional tags to AWS Resources
//             "Key": "Value",  // Example Key and value
//             "Key2": "Value2",
//             },
//         "timeout_seconds": 30, // Maximum lifespan for the Lambda function (default 30, max 900.)
//         "touch": true, // GET the production URL upon initial deployment (default True)
//         "touch_path": "/", // The endpoint path to GET when checking the initial deployment (default "/")
//         "use_precompiled_packages": true, // If possible, use C-extension packages which have been pre-compiled for AWS Lambda. Default true.
//         "vpc_config": { // Optional Virtual Private Cloud (VPC) configuration for Lambda function
//             "SubnetIds": [ "subnet-12345678" ], // Note: not all availability zones support Lambda!
//             "SecurityGroupIds": [ "sg-12345678" ]
//         },
//         "xray_tracing": false // Optional, enable AWS X-Ray tracing on your lambda function.
//     }
// }